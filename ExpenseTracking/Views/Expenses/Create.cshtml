@using System.Security.Claims
@model ExpenseTracking.Models.ExpenseView

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Expense</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @{
                var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                <div class="form-group">
                    <input type="hidden" asp-for="Expense.UserID" class="form-control" value="@userId" />
                    <span asp-validation-for="Expense.UserID" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <label asp-for="Expense.Type" class="control-label"></label>
                <select asp-for="Expense.Type" class="form-control" id="expenseType">
                    <option value="">-- Select Type --</option>
                    <option value="Expenses">Expenses</option>
                    <option value="Income">Income</option>
                </select>
                <span asp-validation-for="Expense.Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Expense.CategoryName" class="control-label"></label>
                <select asp-for="Expense.CategoryName" class="form-control" id="categorySelect">
                    <option value="">-- Select Category --</option>
                </select>
                <span asp-validation-for="Expense.CategoryName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Expense.Amount" class="control-label"></label>
                <input asp-for="Expense.Amount" class="form-control" />
                <span asp-validation-for="Expense.Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Expense.Date" class="control-label"></label>
                <input asp-for="Expense.Date" class="form-control" />
                <span asp-validation-for="Expense.Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Expense.Description" class="control-label"></label>
                <input asp-for="Expense.Description" class="form-control" />
                <span asp-validation-for="Expense.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@{
    var userId2 = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    <a asp-controller="Users" asp-action="Details" asp-route-id="@userId2" class="btn btn-secondary">Back to Profile</a>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const expenseType = document.getElementById('expenseType');
            const categorySelect = document.getElementById('categorySelect');

            // Parse categories data
            const expenseCategories = @Html.Raw(Json.Serialize(Model.ExpenseCategories));
            const incomeCategories = @Html.Raw(Json.Serialize(Model.IncomeCategories));

            // Log categories to the console for debugging
            console.log('Expense Categories:', expenseCategories);
            console.log('Income Categories:', incomeCategories);

            expenseType.addEventListener('change', function () {
                const type = this.value;
                let categories = [];

                if (type === 'Expenses') {
                    categories = expenseCategories;
                } else if (type === 'Income') {
                    categories = incomeCategories;
                }

                // Clear previous options
                categorySelect.innerHTML = '<option value="">-- Select Category --</option>';

                // Add new options
                categories.forEach(function (category) {
                    const option = document.createElement('option');
                    option.value = category.name;
                    option.text = category.name // This sets the text displayed in the dropdown
                    categorySelect.add(option);
                });

                // Log the selected category options for debugging
                console.log('Selected Categories:', categories);
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
