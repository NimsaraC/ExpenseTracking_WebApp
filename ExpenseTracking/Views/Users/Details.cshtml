@using System.Security.Claims
@model ExpenseTracking.Models.UserDashboard

@{
    ViewData["Title"] = "Details";
    var remainingBudget = Model.TotalBudget + Model.TotalIncome - Model.TotalExpenses;
    var totalBudget = Model.TotalBudget + Model.TotalIncome;
    var remainingPercentage = totalBudget > 0 ? (remainingBudget / totalBudget) * 100 : 0;
    var hasBudget = Model.Budgets.Any(); // Check if there are any budgets
    var firstBudget = Model.Budgets.FirstOrDefault(); // Get the first budget if exists
}

<style>
    .card-header h4 {
        font-size: 1.5rem;
        font-weight: 600;
        color: #343a40;
    }

    .card-body dl {
        margin-bottom: 0;
    }

    .card-body dt {
        font-weight: 500;
        color: #495057;
    }

    .card-body dd {
        margin-left: 0;
        margin-bottom: 0.5rem;
        color: #6c757d;
    }

    .card-footer {
        background-color: #f8f9fa;
    }

        .card-footer .btn {
            margin-left: 0.5rem;
        }

    .progress {
        height: 25px;
    }

    .progress-bar {
        line-height: 25px;
        color: #fff;
        text-align: center;
        background-color: #28a745;
    }

    .table th {
        background-color: #e9ecef;
        color: #495057;
    }

    .table td, .table th {
        vertical-align: middle;
    }

    .form-check-inline .form-check-input {
        margin-right: 0.5rem;
    }

    .btn-success, .btn-primary {
        margin: 0.5rem 0;
    }

    .btn-secondary {
        margin: 0.5rem 0;
    }

    .pie-chart-container {
        text-align: center;
    }

        .pie-chart-container canvas {
            max-width: 100%;
            height: 100px; /* Smaller height */
            width: 100px; /* Smaller width */
            border: 1px solid #dee2e6;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
</style>

<div class="container mt-4">

    <div class="card mb-4">
        <div class="card-header">
            <h4>User Information</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.User.Name)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.User.Name)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.User.Email)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.User.Email)
                </dd>
            </dl>
        </div>
        <div class="card-footer text-end">
            <a class="btn btn-primary btn-sm" asp-action="Edit" asp-route-id="@Model?.User.Id">Edit Profile</a>
            <a class="btn btn-secondary btn-sm" asp-action="LogOut">Log Out</a>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Budget Overview</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <!-- Budget Details Column -->
                <div class="col-md-9">
                    <div class="mb-3">
                        @if (hasBudget)
                        {
                            <a class="btn btn-success btn-sm mb-3" asp-controller="Budgets" asp-action="Edit" asp-route-id="@firstBudget.Id">Edit Budget</a>
                        }
                        else
                        {
                            <a class="btn btn-success btn-sm mb-3" asp-controller="Budgets" asp-action="Create">Add Budget</a>
                        }
                    </div>
                    <dl class="row">
                        <dt class="col-sm-4">Total Budget</dt>
                        <dd class="col-sm-8">$@Model.TotalBudget</dd>
                        <dt class="col-sm-4">Total Income</dt>
                        <dd class="col-sm-8">$@Model.TotalIncome</dd>
                        <dt class="col-sm-4">Total Expenses</dt>
                        <dd class="col-sm-8">$@Model.TotalExpenses</dd>
                        <dt class="col-sm-4">Remaining Budget</dt>
                        <dd class="col-sm-8">$@remainingBudget</dd>
                    </dl>
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: @remainingPercentage%" aria-valuenow="@remainingPercentage" aria-valuemin="0" aria-valuemax="100">
                            @remainingPercentage.ToString("F2")%
                        </div>
                    </div>
                </div>
                <!-- Pie Chart Column -->
                <div class="col-md-3">
                    <div class="pie-chart-container">
                        <h5>Budget Distribution</h5>
                        <canvas id="budgetPieChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Expenses and Income</h4>
        </div>
        <div class="card-body">
            <a class="btn btn-success btn-sm mb-3" asp-controller="Expenses" asp-action="Create">Add New</a>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>Date</th>
                        <th>Type</th>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model?.Expenses ?? Enumerable.Empty<Expense>())
                    {
                        <tr>
                            <td>@item.CategoryName</td>
                            <td>@item.Date.ToShortDateString()</td>
                            <td>@item.Type</td>
                            <td>@item.Description</td>
                            <td>$@item.Amount</td>
                            <td>
                                <a class="btn btn-info btn-sm" asp-controller="Expenses" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <a class="btn btn-danger btn-sm" asp-controller="Expenses" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Categories</h4>
        </div>
        <div class="card-body">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="all" name="categoryType" value="" checked>
                <label class="form-check-label" for="all">All</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="expense" name="categoryType" value="Expenses">
                <label class="form-check-label" for="expense">Expenses</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="income" name="categoryType" value="Income">
                <label class="form-check-label" for="income">Income</label>
            </div>
            <a class="btn btn-success btn-sm mb-3" asp-controller="Categories" asp-action="Create">Add New Category</a>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="categoryTableBody">
                    @foreach (var item in Model?.Categories ?? Enumerable.Empty<Category>())
                    {
                        <tr class="categoryRow" data-category-type="@item.Type">
                            <td>@item.Name</td>
                            <td>
                                <a class="btn btn-info btn-sm" asp-controller="Categories" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <a class="btn btn-danger btn-sm" asp-controller="Categories" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('input[name="categoryType"]').forEach(function (radio) {
            radio.addEventListener('change', function () {
                var selectedType = this.value;
                var rows = document.querySelectorAll('.categoryRow');

                rows.forEach(function (row) {
                    if (selectedType === '' || row.getAttribute('data-category-type') === selectedType) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('budgetPieChart').getContext('2d');

            // Assuming you have categories data in the model
            var categoryLabels = @Html.Raw(Json.Serialize(Model.Expenses.Select(c => c.CategoryName)));
            var categoryData = @Html.Raw(Json.Serialize(Model.Expenses.Select(c => c.Amount)));

            var budgetPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: categoryLabels,
                    datasets: [{
                        label: 'Budget Distribution',
                        data: categoryData,
                        backgroundColor: [
                            '#ff6384', // Custom colors for each category
                            '#36a2eb',
                            '#cc65fe',
                            '#ffce56',
                            // Add more colors if needed
                        ],
                        hoverOffset: 4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': $' + tooltipItem.raw;
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}
